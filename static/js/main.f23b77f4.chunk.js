(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,function(e,t,a){},,,,,function(e){e.exports=[{id:1,name:"Crest --Market Trending Platform",description:"Crest is a mock stock trading platform that enables users to purchase and trade imaginary shares of real stocks in real time. Its purpose is to allow the user to practice stock trading strategies without putting up real money. Upon creating an account, the user will be given a budget of $20,000, and will be asked to build a portfolio by searching and purchasing stocks at their real-time market prices. Crest will chart their portfolio performance over time and let the user see how their trades would have done in a real market.",techUsed:"NodeJs, ExpressJs, ReactJs, FusionCharts, Sequelize, Material Desing Bootstrap, PassportJs, Axios",image:"https://i.ibb.co/0MQstVb/crest.png",link:"https://github.com/rskanb/Crest"},{id:2,name:"Democratreats --Polling Application",description:"Democratreats is a polling web app designed to help offices make decisions, whether it's a global change or a simple snack suggestion. This allows office administrators to create polls that employees can vote on, and gives everyone a platform to drop a suggestion.",techUsed:"NodeJs, ExpressJs, HandlebarsJs, Sequelize, Bootstrap, PassportJs",image:"https://i.ibb.co/7W2b8sc/democratreats.png",link:"https://github.com/rskanb/democratreats"},{id:3,name:"WeatherDream",description:"This application highlights the users' current weather forecast (based on browser location) while simultaneously showcasing their dream destination forecast as well as the daily report of the users' home city tempurature. Also, slide show best places pictures based on Home City/Location and Dream Destination provided according to user input.",techUsed:"JavaScript, APIs, Bootstrap, ChartJs, MomentJs ",image:"https://i.ibb.co/6vzXRzW/weather.png",link:"https://github.com/rskanb/WeatherDream"},{id:4,name:"MongoScrapper",description:"Scrap News From Website and update it to MongoDB. Clicking 'Home' or 'Scrap New Article' will fetch New York Times article using Node JS Axios & Cheerios package and store to Mongodb, then display 10 article if article have description using handlebars. User can save individual article as well for future reference.",techUsed:"JavaScript, Handlebars, NodeJs, MongoDb-Mongoose, Bootstrap, Axios, Cheerio ",image:"https://i.ibb.co/nnC2h5v/Mongo-Scrapper.png",link:"https://github.com/rskanb/mongoScraper"},{id:5,name:"NYTGoogleBooksSearch",description:"Initially User will provide input as book name or any topic/author name. Axios will fetch Google book API and React JS render all to front end. Front End side user can view Book Cover Page/Book Title/Book Author/Description and Link to page where user can buy book or see the price. Anyone need this code!!! Just need Google Book API Key inorder to use this. Update in client/src/utils/API.js",techUsed:"JavaScript, ReactJs, NodeJs, Axios, MongoDB, Bootstrap, GoogleBookAPI ",image:"https://i.ibb.co/QJ7K1Nm/nyt-Google-Books-Search.png",link:"https://github.com/rskanb/NYTGoogleBooksSearch"},{id:6,name:"clickyReact",description:"React Js based game where user can start clicking on any image and score will be updated until user click on same image twice (reset score back to 0) Also, each time user click, all images will be shuffled and rendered to React-DOM.",techUsed:"JavaScript, ReactJs, Bootstrap ",image:"https://i.ibb.co/bbdMPC0/clicky.png",link:"https://github.com/rskanb/clickyReact"}]},,,function(e,t,a){e.exports=a(18)},,,,,,function(e,t,a){},function(e,t,a){},function(e,t,a){"use strict";a.r(t);var n=a(0),r=a.n(n),i=a(3),o=a.n(i),s=a(4),l=a(5),c=a(8),d=a(6),m=a(9);a(16);var p=function(e){return r.a.createElement("div",{className:"navbar navbar-expand-lg fixed-top container-fluid-nav text-center"},r.a.createElement("div",{className:"navbar navbar-expand-lg fixed-top collapse navbar-collapse container-fluid-nav text-center"},r.a.createElement("ul",{className:"nav navbar-nav mr-auto"},r.a.createElement("li",null,r.a.createElement("b",null,"Ritesh Kumar")),r.a.createElement("li",null,"Email : rskanb@gmail.com"),r.a.createElement("li",null,"Phone : 510-556-7877"))))},u=(a(2),["JavaScript","NodeJs","ReactJs","ExpressJs","JQuery","MongoDB","MySQL","HTML5","HTML","CSS"]);var h=function(){return r.a.createElement("header",{className:"header"},r.a.createElement("h2",null,"Full-Stack Developer, UC Berkeley Extension, Berkeley, CA"),r.a.createElement("ul",null,u.map(function(e){return r.a.createElement("li",null,"\xa0\u2022\xa0",e,"\xa0")})))};a(17);var g=function(e){return r.a.createElement("div",{className:"card",style:{marginTop:10},id:e.id},r.a.createElement("div",{className:"row"},r.a.createElement("div",{className:"col-md-3"},r.a.createElement("img",{style:{height:200,width:270},className:"img-container",alt:e.name,src:e.image,id:e.id})),r.a.createElement("div",{className:"col-md-9"},r.a.createElement("h2",null,e.name),r.a.createElement("p",null,e.description),r.a.createElement("p",null,e.techUsed),r.a.createElement("button",{style:{marginBottom:5},className:"btn btn-secondary"},r.a.createElement("a",{href:e.link},r.a.createElement("strong",{style:{color:"white"}},"GitHub Link"))))))};var b=function(){return r.a.createElement("div",{className:"footer"},r.a.createElement("h5",null,r.a.createElement("a",{href:"https://github.com/rskanb?tab=repositories"},"Github!!!")))},k=a(7),f=function(e){function t(){return Object(s.a)(this,t),Object(c.a)(this,Object(d.a)(t).apply(this,arguments))}return Object(m.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){return r.a.createElement("div",{className:"container"},r.a.createElement(p,null),r.a.createElement(h,null),k.map(function(e){return r.a.createElement(g,{name:e.name,id:e.id,image:e.image,description:e.description,techUsed:e.techUsed,link:e.link,key:e.id})}),r.a.createElement(b,null),r.a.createElement("hr",null),r.a.createElement("div",null,"Other Project links can be found at Github link displayed in footer...."))}}]),t}(r.a.Component);o.a.render(r.a.createElement(f,null),document.getElementById("root"))}],[[10,1,2]]]);
//# sourceMappingURL=main.f23b77f4.chunk.js.map